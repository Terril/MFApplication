plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def getApiKey() {
    if (project.hasProperty("TOKEN")) {
        return project.TOKEN
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        return keystoreProperties["TOKEN"]
    } else {
        throw new FileNotFoundException("No TOKEN provided and keystore.properties not found.")
    }
}

//def updateKeystoreFromCommandLineToken() {
//    if (project.hasProperty("TOKEN")) {
//        def token = project.property("TOKEN")
//        def file = rootProject.file("keystore.properties")
//        def props = new Properties()
//
//        if (file.exists()) {
//            props.load(new FileInputStream(file))
//        }
//
//        props.setProperty("TOKEN", token.toString())
//        props.store(new FileOutputStream(file), null)
//
//        println("âœ” TOKEN updated in keystore.properties")
//    }
//}
//
//updateKeystoreFromCommandLineToken()
android {
    compileSdk 32
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "API_URL", "\"https://api.github.com/\""
        buildConfigField "String", "TOKEN", "\"${getApiKey()}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'com.google.android.ads:mediation-test-suite:2.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "com.google.dagger:dagger:2.40.5"
    kapt "com.google.dagger:dagger-compiler:2.40.5"

    // Dagger Android support
    implementation "com.google.dagger:dagger-android:2.40.5"
    implementation "com.google.dagger:dagger-android-support:2.40.5"
    kapt "com.google.dagger:dagger-android-processor:2.40.5"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'com.google.android.flexbox:flexbox:3.0.0'
}

